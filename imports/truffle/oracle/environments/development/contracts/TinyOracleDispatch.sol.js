// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"value","type":"uint256"}],"name":"transfer","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_query","type":"bytes"}],"name":"query","outputs":[{"name":"id","type":"uint256"}],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"},{"indexed":false,"name":"recipient","type":"address"},{"indexed":false,"name":"query","type":"bytes"}],"name":"Incoming","type":"event"}],
    binary: "606060405260008054600160a060020a0319163317905561029a806100246000396000f3606060405260e060020a600035046312514bba811461004757806313af40351461007057806341c0e1b5146100b2578063a9059cbb146100da578063ed815d8314610122575b005b610045600435600054600160a060020a03908116339190911614156100af576100af33826100e4565b610045600435600054600160a060020a03908116339190911614156100af576000805473ffffffffffffffffffffffffffffffffffffffff1916821790555b50565b610045600054600160a060020a03908116339190911614156102985733600160a060020a0316ff5b6100456004356024355b600054600160a060020a039081163391909116141561011e57604051600160a060020a03831690600090839082818181858883f150505050505b5050565b6102866004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750949650505050505050600043428333604051808581526020018481526020018380519060200190808383829060006004602084601f0104600f02600301f15090500182600160a060020a03166c01000000000000000000000000028152601401945050505050604051809103902060019004905080507ff36eeaf91f793c1d68853c3255ed7ee81c38595d693b11228a72b6a9379165a38133846040518084815260200183600160a060020a03168152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102725780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1919050565b60408051918252519081900360200190f35b56",
    unlinked_binary: "606060405260008054600160a060020a0319163317905561029a806100246000396000f3606060405260e060020a600035046312514bba811461004757806313af40351461007057806341c0e1b5146100b2578063a9059cbb146100da578063ed815d8314610122575b005b610045600435600054600160a060020a03908116339190911614156100af576100af33826100e4565b610045600435600054600160a060020a03908116339190911614156100af576000805473ffffffffffffffffffffffffffffffffffffffff1916821790555b50565b610045600054600160a060020a03908116339190911614156102985733600160a060020a0316ff5b6100456004356024355b600054600160a060020a039081163391909116141561011e57604051600160a060020a03831690600090839082818181858883f150505050505b5050565b6102866004808035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843750949650505050505050600043428333604051808581526020018481526020018380519060200190808383829060006004602084601f0104600f02600301f15090500182600160a060020a03166c01000000000000000000000000028152601401945050505050604051809103902060019004905080507ff36eeaf91f793c1d68853c3255ed7ee81c38595d693b11228a72b6a9379165a38133846040518084815260200183600160a060020a03168152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102725780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1919050565b60408051918252519081900360200190f35b56",
    address: "",
    generated_with: "2.0.9",
    contract_name: "TinyOracleDispatch"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("TinyOracleDispatch error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("TinyOracleDispatch error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("TinyOracleDispatch error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("TinyOracleDispatch error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.TinyOracleDispatch = Contract;
  }

})();
